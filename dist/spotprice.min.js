(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):(global=typeof globalThis!=="undefined"?globalThis:global||self,global.spotprice=factory())})(this,function(){"use strict";const npBaseApiUrl="https://www.nordpoolgroup.com/api/marketdata/page",periods={hourly:10,daily:11,weekly:12,monthly:13,yearly:14};async function spotprice(period,requestedArea,currency,endDate,urlOverride,resultOverride){let url;if(urlOverride){url=urlOverride}else{const params=new URLSearchParams;if(currency)params.append("currency",currency.trim().toUpperCase());if(endDate)params.append("endDate",endDate);const periodId=periods[period];if(!periodId){throw new Error("Invalid period, please use hourly, daily etc...")}url=`${npBaseApiUrl}/${periodId}?${params.toString()}`}let result=resultOverride;if(!resultOverride){const fetcher=await fetch(url);result=await fetcher.json()}const requestedEntity=result.conf.Entities.find(e=>{return e.Name==requestedArea});if(!requestedEntity){throw new Error("Requested area code not found")}const spotPrices=[],unit=result.data.Units[0];for(const row of result.data.Rows){const startTime=row.StartTime,column=row.Columns[requestedEntity.Index-1],generatedRow={startTime:startTime,areaCode:column.Name,spotPrice:column.Value,unit:unit};spotPrices.push(generatedRow)}return spotPrices}spotprice.spotprice=spotprice;return spotprice});